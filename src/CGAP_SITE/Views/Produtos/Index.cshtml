@model IEnumerable<CGAP_SITE.Models.Produto>

@{
    ViewData["Title"] = "Índice - Produtos";
}

<h2>@ViewData["Title"]</h2>

<p>
    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
    <a asp-action="Insert">Criar Novo</a>
</p>
<select id='filter-produtos' style='display:inline-block' onchange='filterText()'>
    <option disabled selected>Pesquisar por</option>
    <option value='0'>Tag</option>
    <option value='1'>Tipo</option>
    <option value='2'>Marca</option>
    <option value='3'>Sala</option>
</select>
<input type="text" id="input-produtos" onkeyup="myFunction()" placeholder="Pesquisar...">
<table class="table" id="table-produtos">
    <thead>
        <tr>
            <th onclick="sortTable(0)">
                @Html.DisplayNameFor(model => model.Tag)
            </th>
            <th onclick="sortTable(1)">
                @Html.DisplayNameFor(model => model.Tipo)
            </th>
            <th onclick="sortTable(2)">
                @Html.DisplayNameFor(model => model.Marca)
            </th>
            <th onclick="sortTable(3)">
                @Html.DisplayName("Sala")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Tag)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tipo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Marca)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sala.Nome)
                </td>
                
                <td>
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                    <a asp-action="Update" asp-route-id="@item.ProdutoID">Editar</a> |
                    <span class="glyphicon glyphicon-file" aria-hidden="true"></span>
                    <a asp-action="Details" asp-route-id="@item.ProdutoID">Detalhes</a> |
                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                    <a asp-action="Delete" asp-route-id="@item.ProdutoID">Excluir</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("table-dep");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc";
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.getElementsByTagName("TR");
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}

function filterText() {
    $("#input-produtos").val('');
    myFunction();
}

function myFunction() {
    // Declare variables
    var input, filter, table, tr, td, i;
    input = document.getElementById("input-produtos");
    filter = input.value.toUpperCase();
    table = document.getElementById("table-produtos");
    tr = table.getElementsByTagName("tr");

    // Loop through all table rows, and hide those who don't match the search query
    for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td")[parseInt($("#filter-produtos").val())];
        if (td) {
            if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = "";
            } else {
                tr[i].style.display = "none";
            }
        }
    }
}
</script>